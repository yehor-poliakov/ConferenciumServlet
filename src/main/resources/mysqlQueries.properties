#user
createUser = INSERT INTO users (email, first_name, last_name, password, role) VALUES (?, ?, ?, ?, ?)
findUserById = SELECT * FROM users WHERE id = ?
findUserByEmail = SELECT * FROM users WHERE email = ?
findUserByEmailAndPassword = SELECT * FROM users WHERE email = ? AND password = ?
isParticipant = SELECT EXISTS(*) FROM conference_participants WHERE user_id = ? AND conference_id = ?
findAllUsersSpeakers = SELECT id AS user_id, CONCAT(first_name + last_name) as user_name FROM users WHERE role = 'SPEAKER' 

#conference
createConference = INSERT INTO conference (date, location, title) VALUES (?, ?, ?)
updateConference = UPDATE conference SET date = ?, location = ?, title = ? WHERE id = ?
deleteConference = DELETE FROM conference WHERE id = ?
findConferenceById = SELECT *, 0 as presentations, 0 as participants FROM conference WHERE id = ?
findAllConferences = SELECT c.*, presentations_counts.presentations, participants_counts.participants FROM Conference c \
  LEFT JOIN (SELECT p.conference_id, COUNT(*) as presentations FROM Presentation p \
    WHERE presentation_approved = true \
    GROUP BY p.conference_id \
  ) presentations_counts ON presentations_counts.conference_id = c.id \
  LEFT JOIN (SELECT cp.conference_id, COUNT(*) as participants FROM Conference_participants cp \
    GROUP BY cp.conference_id\
  ) participants_counts ON participants_counts.conference_id = c.id \
  WHERE \
    (? OR c.date >= CURDATE()) \
    AND \
    (? OR c.date <= CURDATE())
countAllConferences = SELECT COUNT(*) FROM Conference c \
    WHERE (? OR c.date >= CURDATE()) AND (? OR c.date <= CURDATE())

#presentation
createPresentation = INSERT INTO presentation (conference_id, speaker_id, time, topic, speaker_approved, presentation_approved)
updatePresentation = UPDATE presentation SET speaker_id = ?, time = ?, topic = ?, speaker_approved = ?, presentation_approved = ? WHERE id = ?
deletePresentation = DELETE FROM presentation WHERE id = ?
findPresentationById = SELECT presentation.*, \
  CASE WHEN speaker_id IS NULL THEN '' ELSE CONCAT(first_name, ' ', last_name) END AS speaker \
  FROM presentation \
  LEFT JOIN users ON speaker_id = users.id \
  WHERE presentation.id = ?
findPresentationsBySpeakerId = SELECT conference_id, topic, title, location, date, time, presentation_approved, speaker_approved \
  FROM presentation \
  JOIN conference ON conference_id = conference.id \
  WHERE speaker_id = ? ORDER BY date DESC LIMIT ?, ?
findPresentationsByConferenceId = SELECT presentation.*, \
  CASE WHEN speaker_id IS NULL THEN '' ELSE CONCAT(first_name, ' ', last_name) END AS speaker \
  FROM presentation \
  LEFT JOIN users ON speaker_id = users.id \
  WHERE conference_id = ?
countPresentationsBySpeakerId = SELECT COUNT(*) FROM presentation WHERE speaker_id = ?
countPresentationsByConferenceId = SELECT COUNT(*) FROM presentation WHERE conference_id = ?